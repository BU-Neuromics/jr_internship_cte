"0","#Obtain result from each deseq object"
"0","all_results <- lapply("
"0","  all_obj_names,"
"0","  function(result_name) {"
"0","    results_c <- results(all_deseq_obj[[result_name]])"
"0","    results_c <- results_c[order(results_c$log2FoldChange), ]"
"0","    l2fc_genes_test <- data.frame(ENSGID = rownames(results_c), result_name = results_c$log2FoldChange)"
"0","    colnames(l2fc_genes_test)[2] <- result_name"
"0","    return(l2fc_genes_test)"
"0","    })"
"0","#assigns names to each result object"
"0","names(all_results) <- all_obj_names"
"0","#uses tidyverse to reduce list of DF to one, joining by ENSGID"
"0","results_combined <- all_results %>% reduce(full_join, by=""ENSGID"")"
"0","#assign rownames "
"0","rownames(results_combined) <- results_combined$ENSGID"
"0","#removes ENSGID col"
"0","#results_combined <- results_combined[,-1]"
"0",""
"0","#Making a gene map and assigning symbols to all_results"
"0","gene_ids <- unique(unlist(lapply("
"0","  all_results,"
"0","  function(i)"
"0","    i$ENSGID"
"0",")))"
"0","#removes the dot and numbers after from all ensg IDs"
"0","cleaned_gene_ids <- sub(""\\..*$"", """", gene_ids)"
"0","#Creates a mart object for creating the gene map. If mirror needed, use:     , mirror = ""useast"""
"0","ensembl.con <- useEnsembl(biomart = ""genes"", dataset = ""hsapiens_gene_ensembl"", mirror = ""useast"")"
"0",""
"0","gene_map <- getBM(attributes = c(""ensembl_gene_id"", ""external_gene_name""),"
"0","      filters = ""ensembl_gene_id"","
"0","      values = cleaned_gene_ids,"
"0","      mart = ensembl.con)"
"0",""
"0","#Get significant genes to base each heatmap on"
"0","all_results_sig_05 <- lapply("
"0","  all_obj_names,"
"0","  function(result_name) {"
"0","    results_c <- results(all_deseq_obj[[result_name]])"
"0","    results_sig <- subset(results_c, padj < 0.05)"
"0","    results_sig <- results_sig[order(results_sig$pvalue), ]"
"0","    return(results_sig)"
"0","    })"
"0","names(all_results_sig_05) <- all_obj_names  "
"0",""
"0","heatmap_list <- lapply("
"0","  all_obj_names,"
"0","  function(design_factor) {"
"0","    design_res <- all_results_sig_05[[design_factor]]"
"0","    design_df <- data.frame(design_res)"
"0","    design_genes <- data.frame(ENSGID = rownames(design_df), design_factor = design_df$log2FoldChange)"
"0","    merged_values <- merge(results_combined, design_genes, by=""ENSGID"")"
"0","    rownames(merged_values) <- merged_values[,""ENSGID""]"
"0","    merged_values <- subset(merged_values, select = -design_factor)"
"0","    merged_values <- subset(merged_values, select = -ENSGID)"
"0","  })"
"0","names(heatmap_list) <- all_obj_names "
"0",""
"0","#Removes dots in ENSGID IDs"
"0","for (i in all_obj_names) {"
"0","  rownames(heatmap_list[[i]]) <- gsub(""\\.\\d+$"", """", rownames(heatmap_list[[i]]))"
"0","}"
"0","#Converts ENSGIDs to gene symbols using map"
"0","for (i in seq_along(heatmap_list)) {"
"0","  heatmap_list[[i]]$rownames <- rownames(heatmap_list[[i]])"
"0","  heatmap_list[[i]] <- merge(heatmap_list[[i]], gene_map, by.x =""rownames"", by.y =""ensembl_gene_id"", all.x = TRUE)"
"0","  heatmap_list[[i]] <- heatmap_list[[i]][complete.cases(heatmap_list[[i]]$external_gene_name) & heatmap_list[[i]]$external_gene_name != """", ]"
"0","  rownames(heatmap_list[[i]]) <- make.unique(as.character(heatmap_list[[i]]$external_gene_name))"
"0","  heatmap_list[[i]] <- subset(heatmap_list[[i]], select = -c( rownames, external_gene_name))"
"0","}"
"0",""
"0","for (i in seq_along(heatmap_list)){"
"0","  heatmap_list <- Filter(function(i) nrow(i) > 1, heatmap_list)"
"0","}"
"0","filtered_names <- names(heatmap_list)"




```{r, echo=FALSE}
library(DESeq2)
library(dplyr)
library(biomaRt)
library(tidyverse)
library(pheatmap)
```

```{r}
group_low_deseq <- readRDS("/restricted/projectnb/cteseq/jrose/cte_deseq_output_group_AT8total_low.rds")
group_high_deseq <- readRDS("/restricted/projectnb/cteseq/jrose/cte_deseq_output_group_AT8total_high.rds")

group_low_deseq_2018 <- readRDS("/restricted/projectnb/cteseq/jrose/cte_deseq_output_group_AT8total_2018_low.rds")
group_high_deseq_2018 <- readRDS("/restricted/projectnb/cteseq/jrose/cte_deseq_output_group_AT8total_2018_high.rds")

group_low_deseq_2021 <- readRDS("/restricted/projectnb/cteseq/jrose/cte_deseq_output_group_AT8total_2021_low.rds")
group_high_deseq_2021 <- readRDS("/restricted/projectnb/cteseq/jrose/cte_deseq_output_group_AT8total_2021_high.rds")
```
high/low group /w AT8_total, not stratified by year
```{r}
res_obj_low <- results(group_low_deseq)
res_obj_low <- res_obj_low[order(res_obj_low$stat), ]
res_genes_low <- data.frame(ENSGID = rownames(res_obj_low),baseMean = res_obj_low$baseMean, log2FoldChange = res_obj_low$log2FoldChange, lfcSE = res_obj_low$lfcSE, stat = res_obj_low$stat, pvalue = res_obj_low$pvalue, padj = res_obj_low$padj)
res_genes_low$ENSGID <- sub("\\..*$", "", res_genes_low$ENSGID)

                            
res_obj_high <- results(group_high_deseq)
res_obj_high <- res_obj_high[order(res_obj_high$stat), ]
res_genes_high <- data.frame(ENSGID = rownames(res_obj_high),baseMean = res_obj_high$baseMean, log2FoldChange = res_obj_high$log2FoldChange, lfcSE = res_obj_high$lfcSE, stat = res_obj_high$stat, pvalue = res_obj_high$pvalue, padj = res_obj_high$padj)
res_genes_high$ENSGID <- sub("\\..*$", "", res_genes_high$ENSGID)

#makes vector of ENSGIDs for mapping
ENSG_IDs <- res_genes_low$ENSGID

#Creates a mart object for creating the gene map.
ensembl.con <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl", mirror = "useast")
gene_map <- getBM(attributes = c("ensembl_gene_id", "external_gene_name"),
      filters = "ensembl_gene_id",
      values = ENSG_IDs,
      mart = ensembl.con)

res_genes_low_with_symbols <- merge(res_genes_low, gene_map, by.x = "ENSGID", by.y = "ensembl_gene_id", all.x = TRUE)
res_genes_high_with_symbols <- merge(res_genes_high, gene_map, by.x = "ENSGID", by.y = "ensembl_gene_id", all.x = TRUE)
```
high/low group /w AT8_total for 2018
```{r}
res_obj_low_2018 <- results(group_low_deseq_2018)
res_obj_low_2018 <- res_obj_low_2018[order(res_obj_low_2018$stat), ]
res_genes_low_2018 <- data.frame(ENSGID = rownames(res_obj_low_2018),baseMean = res_obj_low_2018$baseMean, log2FoldChange = res_obj_low_2018$log2FoldChange, lfcSE = res_obj_low_2018$lfcSE, stat = res_obj_low_2018$stat, pvalue = res_obj_low_2018$pvalue, padj = res_obj_low_2018$padj)
res_genes_low_2018$ENSGID <- sub("\\..*$", "", res_genes_low_2018$ENSGID)

                            
res_obj_high_2018 <- results(group_high_deseq_2018)
res_obj_high_2018 <- res_obj_high_2018[order(res_obj_high_2018$stat), ]
res_genes_high_2018 <- data.frame(ENSGID = rownames(res_obj_high_2018),baseMean = res_obj_high_2018$baseMean, log2FoldChange = res_obj_high_2018$log2FoldChange, lfcSE = res_obj_high_2018$lfcSE, stat = res_obj_high_2018$stat, pvalue = res_obj_high_2018$pvalue, padj = res_obj_high_2018$padj)
res_genes_high_2018$ENSGID <- sub("\\..*$", "", res_genes_high_2018$ENSGID)

#makes vector of ENSGIDs for mapping
ENSG_IDs <- res_genes_low_2018$ENSGID

#Creates a mart object for creating the gene map.
ensembl.con <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl", mirror = "useast")
gene_map <- getBM(attributes = c("ensembl_gene_id", "external_gene_name"),
      filters = "ensembl_gene_id",
      values = ENSG_IDs,
      mart = ensembl.con)

res_genes_low_with_symbols_2018 <- merge(res_genes_low_2018, gene_map, by.x = "ENSGID", by.y = "ensembl_gene_id", all.x = TRUE)
res_genes_high_with_symbols_2018 <- merge(res_genes_high_2018, gene_map, by.x = "ENSGID", by.y = "ensembl_gene_id", all.x = TRUE)

```
high/low group /w AT8_total for 2021
```{r}
res_obj_low_2021 <- results(group_low_deseq_2021)
res_obj_low_2021 <- res_obj_low_2021[order(res_obj_low_2021$stat), ]
res_genes_low_2021 <- data.frame(ENSGID = rownames(res_obj_low_2021),baseMean = res_obj_low_2021$baseMean, log2FoldChange = res_obj_low_2021$log2FoldChange, lfcSE = res_obj_low_2021$lfcSE, stat = res_obj_low_2021$stat, pvalue = res_obj_low_2021$pvalue, padj = res_obj_low_2021$padj)
res_genes_low_2021$ENSGID <- sub("\\..*$", "", res_genes_low_2021$ENSGID)

                            
res_obj_high_2021 <- results(group_high_deseq_2021)
res_obj_high_2021 <- res_obj_high_2021[order(res_obj_high_2021$stat), ]
res_genes_high_2021 <- data.frame(ENSGID = rownames(res_obj_high_2021),baseMean = res_obj_high_2021$baseMean, log2FoldChange = res_obj_high_2021$log2FoldChange, lfcSE = res_obj_high_2021$lfcSE, stat = res_obj_high_2021$stat, pvalue = res_obj_high_2021$pvalue, padj = res_obj_high_2021$padj)
res_genes_high_2021$ENSGID <- sub("\\..*$", "", res_genes_high_2021$ENSGID)

#makes vector of ENSGIDs for mapping
ENSG_IDs <- res_genes_low_2021$ENSGID

#Creates a mart object for creating the gene map.
ensembl.con <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl", mirror = "useast")
gene_map <- getBM(attributes = c("ensembl_gene_id", "external_gene_name"),
      filters = "ensembl_gene_id",
      values = ENSG_IDs,
      mart = ensembl.con)

res_genes_low_with_symbols_2021 <- merge(res_genes_low_2021, gene_map, by.x = "ENSGID", by.y = "ensembl_gene_id", all.x = TRUE)
res_genes_high_with_symbols_2021 <- merge(res_genes_high_2021, gene_map, by.x = "ENSGID", by.y = "ensembl_gene_id", all.x = TRUE)

```
Subset sig genes
```{r}
sig_low <- subset(res_genes_low_with_symbols, padj < 0.1)
sig_high <- subset(res_genes_high_with_symbols, padj < 0.1)

sig_low_2018 <- subset(res_genes_low_with_symbols_2018, padj < 0.1)
sig_high_2018 <- subset(res_genes_high_with_symbols_2018, padj < 0.1)

sig_low_2021 <- subset(res_genes_low_with_symbols_2021, padj < 0.1)
sig_high_2021 <- subset(res_genes_high_with_symbols_2021, padj < 0.1)
```


Plot high/low /w at8 total, no year
```{r}
sig_low_hm <- subset(sig_low, select = c(external_gene_name, log2FoldChange))
sig_low_hm <- sig_low_hm[sig_low_hm$external_gene_name != "", ]
#rownames(sig_low_hm) <- make.unique(as.character(sig_low_hm$external_gene_name))
#sig_low_hm <- subset(sig_low_hm, select = -c(external_gene_name))


sig_high_hm <- subset(sig_high, select = c(external_gene_name, log2FoldChange))
sig_high_hm <- sig_high_hm[sig_high_hm$external_gene_name != "", ]
#rownames(sig_high_hm) <- make.unique(as.character(sig_high_hm$external_gene_name))
#sig_high_hm <- subset(sig_high_hm, select = -c(external_gene_name))

merged_group <- merge(sig_high_hm, sig_low_hm, by = "external_gene_name", all = TRUE)

ggplot(data = merged_group, aes(x = log2FoldChange.x, y = log2FoldChange.y)) + geom_point()
```
Plot high/low /w at8 total for 2018
```{r}
sig_low_hm_2018 <- subset(sig_low_2018, select = c(external_gene_name, log2FoldChange))
sig_low_hm_2018 <- sig_low_hm_2018[ sig_low_hm_2018$external_gene_name != "", ]
#rownames(sig_low_hm_2018) <- make.unique(as.character(sig_low_hm_2018$external_gene_name))
#sig_low_hm_2018 <- subset(sig_low_hm_2018, select = -c(external_gene_name))


sig_high_hm_2018 <- subset(sig_high_2018, select = c(external_gene_name, log2FoldChange))
sig_high_hm_2018 <- sig_high_hm_2018[sig_high_hm_2018$external_gene_name != "", ]
#rownames(sig_high_hm_2018) <- make.unique(as.character(sig_high_hm_2018$external_gene_name))
#sig_high_hm_2018 <- subset(sig_high_hm_2018, select = -c(external_gene_name))

merged_group_2018 <- merge(sig_high_hm_2018, sig_low_hm_2018, by = "external_gene_name", all = TRUE)

ggplot(data = merged_group_2018, aes(x = log2FoldChange.x, y = log2FoldChange.y)) + geom_point()
```
Plot high/low /w at8 total for 2021
```{r}
sig_low_hm_2021 <- subset(sig_low_2021, select = c(external_gene_name, log2FoldChange))
sig_low_hm_2021 <- sig_low_hm_2021[sig_low_hm_2021$external_gene_name != "", ]
#rownames(sig_low_hm_2021) <- make.unique(as.character(sig_low_hm_2021$external_gene_name))
#sig_low_hm_2021 <- subset(sig_low_hm_2021, select = -c(external_gene_name))


sig_high_hm_2021 <- subset(sig_high_2021, select = c(external_gene_name, log2FoldChange))
sig_high_hm_2021 <- sig_high_hm_2021[sig_high_hm_2021$external_gene_name != "", ]
#rownames(sig_high_hm_2021) <- make.unique(as.character(sig_high_hm_2021$external_gene_name))
#sig_high_hm_2021 <- subset(sig_high_hm_2021, select = -c(external_gene_name))

merged_group_2021 <- merge(sig_high_hm_2021, sig_low_hm_2021, by = "external_gene_name", all = TRUE)

ggplot(data = merged_group_2021, aes(x = log2FoldChange.x, y = log2FoldChange.y)) + geom_point()
```






















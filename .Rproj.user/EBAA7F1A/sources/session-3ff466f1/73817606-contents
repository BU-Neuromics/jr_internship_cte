---
title: "CTE_deseq_2"
output: html_document
date: "2023-11-15"
---

```{r, echo=FALSE}
library(haven)
library(readxl)
library(DESeq2)
library(dplyr)
library(ggplot2)
```

```{r}
spss_meta <- read_sav("/restricted/projectnb/cteseq/projects/CTE_data_processing/09.28.2023_dataset/CTE RNAseq phenotype data.sav")
csv_meta <- read.csv("/restricted/projectnb/cteseq/projects/CTE_data_processing/all_meta.csv")
counts <- read.csv("/restricted/projectnb/cteseq/projects/CTE_data_processing/all_counts.csv")
AT8_ex_data <- read.csv("/restricted/projectnb/cteseq/jrose/cte_DLFCWSAT8.csv")[ ,2:3]
cte_missing_data <- read_excel("/restricted/projectnb/cteseq/projects/CTE_data_processing/09.28.2023_dataset/CTE CASES FOR MISSING APOE AND TMEM.xlsx")
sav_meta <- read_sav("/restricted/projectnb/cteseq/jrose/RNAsequence.sav")
#Fixes a mismatched sample name
spss_meta$subjid <- gsub("BVAX81", "BVAX081", spss_meta$subjid)

sav_meta$subjid <- gsub("BVAX81", "BVAX081", sav_meta$subjid)
#Changes format to match other rs value
spss_meta$rs3173615 <- gsub("C", "C:C", spss_meta$rs3173615)
spss_meta$rs3173615 <- gsub("G", "G:G", spss_meta$rs3173615)
spss_meta$rs3173615 <- gsub("C:CG:G", "C:G", spss_meta$rs3173615)

sav_meta$rs3173615 <- gsub("C", "C:C", sav_meta$rs3173615)
sav_meta$rs3173615 <- gsub("G", "G:G", sav_meta$rs3173615)
sav_meta$rs3173615 <- gsub("C:CG:G", "C:G", sav_meta$rs3173615)
#renamed for ease of merging
colnames(cte_missing_data)[1] = "subjid"
colnames(cte_missing_data)[2] = "apoe"
colnames(cte_missing_data)[3] = "rs3173615"
#Merge cte_missing_data into spss_meta file.
spss_merged <- merge(spss_meta, cte_missing_data, by = "subjid", all.x = TRUE)
spss_merged$rs3173615 <- ifelse(spss_merged$rs3173615.x == "" & spss_merged$rs3173615.y != "", spss_merged$rs3173615.y, spss_merged$rs3173615.x)
spss_merged$apoe <- ifelse(is.na(spss_merged$apoe.x) & spss_merged$apoe.y != "", spss_merged$apoe.y, spss_merged$apoe.x)
spss_merged <- subset(spss_merged, select = -c(apoe.x, apoe.y, rs3173615.x, rs3173615.y))

sav_meta <- merge(sav_meta, cte_missing_data, by = "subjid", all.x = TRUE)
sav_meta$rs3173615 <- ifelse(sav_meta$rs3173615.x == "" & sav_meta$rs3173615.y != "", sav_meta$rs3173615.y, sav_meta$rs3173615.x)
sav_meta$apoe <- ifelse(is.na(sav_meta$apoe.x) & sav_meta$apoe.y != "", sav_meta$apoe.y, sav_meta$apoe.x)
sav_meta <- subset(sav_meta, select = -c(apoe.x, apoe.y, rs3173615.x, rs3173615.y))
#Merge in additional AT8 data
AT8_ex_data$subjid <- gsub("K", "K-", AT8_ex_data$subjid)
AT8_ex_data$subjid <- gsub("SLI", "SLI-", AT8_ex_data$subjid)
AT8_ex_data$subjid <- gsub("SLI-0", "SLI-", AT8_ex_data$subjid)
spss_merged <- merge(spss_merged, AT8_ex_data, by = "subjid")
sav_merged <- merge(sav_meta, AT8_ex_data, by = "subjid")
```
Filtering count data
```{r}
#Sets counts gene names (X) to row names, then removing that column
rownames(counts) <- counts$X
counts <- subset(counts, select = -X)
#Filters out gene names that have 150 or more zeros
filter_metric <- rowSums(counts == 0) < 150
#filter_metric <- rowSums(counts >= 10)
filtered_counts <- counts[filter_metric,]
#Sorts column names alphabetically for deseq
filtered_counts <- filtered_counts[, order(names(filtered_counts))]
```
Creating merged meta file and transforming data
```{r}
#substitutes K values with only 3 digits after "K-" to have a 0 in front of them
csv_meta$Sample_ID <- gsub("^K-(\\d{3})", "K-0\\1", csv_meta$Sample_ID)
#Does the same as above, but for SampleName instead of Sample_ID.
csv_meta$SampleName <- gsub("^K-(\\d{3}$)", "K-0\\1", csv_meta$SampleName)
#changes Corde_ID in CSV to line up with counts file. Example: ST_AN_K-688 to ST_AN_K.688
csv_meta$Core_ID <- gsub("^ST_AN_K-", "ST_AN_K.", csv_meta$Core_ID)
csv_meta$Core_ID <- gsub("^ST_AN_SLI-", "ST_AN_SLI.", csv_meta$Core_ID)

#Changing the value of 7 to NA in npbraak. It seems odd with a continuous model and only has one person
spss_merged$npbraak <- gsub("7", NA, spss_merged$npbraak)
sav_merged$npbraak <- gsub("7", NA, sav_merged$npbraak)

#Merges meta data files. ADD/REMOVE # DEPENDING ON USING SPSS OR SAV META
csv_meta <- csv_meta[,c("SampleName", "RIN", "Core_ID", "Batch", "Year")]
#merged_meta <- merge(csv_meta, spss_merged, by.x = "SampleName", by.y = "subjid")
merged_meta <- merge(csv_meta, sav_merged, by.x = "SampleName", by.y = "subjid")

#Transforming apoe, Group/CTE and tmem
merged_meta$DLFC.WS.AT8..cell.mm2 <- gsub("#N/A", NA, merged_meta$DLFC.WS.AT8..cell.mm2)
merged_meta$Group_de <- ifelse(merged_meta$Group %in% c(1,2), "low", ifelse(merged_meta$Group == 3, "high", NA))
merged_meta$apoe_de <- ifelse(merged_meta$apoe %in% c(24, 34, 44), 1, 0)
merged_meta$apoe_de <- ifelse(merged_meta$apoe %in% c(24, 34, 44), 1, 0)
merged_meta$TMEM106B_dom <- ifelse(merged_meta$rs3173615 %in% c("C:C", "C:G"), 1, ifelse(merged_meta$rs3173615 == "G:G", 0, NA))
merged_meta$TMEM106B_invrec <- ifelse(merged_meta$rs3173615 == "C:C", 1, ifelse(merged_meta$rs3173615 %in% c("G:G", "C:G"), 0, NA))

```
Preparing meta file and adding AT8log
```{r}
#Sorts Core_ID alphabetically
merged_meta <- merged_meta[order(merged_meta[["Core_ID"]]), ]
#Sets Core_ID to row names for deseq2 #rownames(merged_meta) <- merged_meta$Core_ID

#AT8log
merged_meta$AT8sulcusLog <- log(merged_meta$AT8sulcus)
merged_meta$AT8crestLog <- log(merged_meta$AT8crest)
```
Filtering meta file
```{r}
#Turns AT8 Extra data into numeric instead of characters
merged_meta$DLFC.WS.AT8..cell.mm2 <- as.numeric(merged_meta$DLFC.WS.AT8..cell.mm2)
merged_meta$AT8_total <- merged_meta$DLFC.WS.AT8..cell.mm2
merged_meta <- subset(merged_meta, select = -c(DLFC.WS.AT8..cell.mm2))
#rearrange factor levels. Only binary category to have reversed factors by default. Others are fine
merged_meta$Group_de <- factor(merged_meta$Group_de, levels = c("low", "high"))

#Filtering out NA values on set design columns
merged_meta <- subset(merged_meta, !is.na(merged_meta$agedeath))
merged_meta <- subset(merged_meta, !is.na(merged_meta$RIN))
#Filtering counts to only contain Core_ID (columns in counts) in the merged_AT8 df
#counts_filtered <- counts[, names(counts) %in% merged_AT8$Core_ID]
rounded <- round(filtered_counts)
```


categorizing data columns by type
```{r}
col_continuous <- c("footyrs", "AFE", "totyrs", "agecogsx", "cogdecage", "mincogage", "disdur", "AT8sulcusLog", "AT8_total", "AT8crestLog", "aestot", "bistot", "tbri", "tmi", "tgec", "maxaggsum", "CDStot", "chii_f", "chii_r", "chii_g", "faqtot", "GDStot")

col_categorical <- c("DementiaHx", "npold", "nppath", "npftdtau", "PathAD", "PathFTD", "CTE", "suicide", "Group_de", "apoe_de", "TMEM106B_dom", "TMEM106B_invrec", "ParknismHx", "nptdpb", "nptdpc", "nptdpe", "csparCTE", "sleepact")

col_ordinal <- c("npavas", "npwmr", "npbraak", "npneur", "npadnc", "npdiff", "npamy", "nparter")

col_categorical_polychotomous <- c("PathLBD", "CTEStage", "Group", "cod", "nplbod", "nphipscl")

new_col <- c("aestot", "bistot", "tbri", "tmi", "tgec", "maxaggsum", "CDStot", "chii_f", "chii_r", "chii_g", "ParknismHx", "faqtot", "GDStot", "nphipscl", "nptdpb", "nptdpc", "nptdpe", "csparCTE", "sleepcb", "sleepact")

col_exclude <- c("SampleName", "RIN", "Core_ID", "race", "nphemo", "npold1", "npold2", "npold3", "npold4", "npoldd1", "npoldd2", "npoldd3", "npoldd4", "nppath6", "nppick", "npftdt2", "npcort", "npprog", "npftdt5", "npftdt8", "npftdt9", "npftdt10", "npftdtdp", "micdorfront", "micinfpar", "micalc", "locratio", "subratio", "CA1ratio", "CA23ratio", "CA4ratio", "sport", "rs1990622", "rs3173615", "apoe", "PathPrion", "npoftd", "micsuptemp", "PathMND", "AT8sulcus", "AT8crest")

col_combined <- c(col_categorical, col_continuous)

test_cols <- subset(merged_meta, select = c("agedeath", "RIN", "AT8_total", "Year", "Batch", "DementiaHx"))


#ggplot(merged_meta, aes(x=merged_meta$DLFC.WS.AT8..cell.mm2, y=merged_meta$AT8crestLog)) + geom_point() +geom_smooth()
#ggplot(merged_meta, aes(x=merged_meta$SampleName, y=merged_meta$DLFC.WS.AT8..cell.mm2)) + geom_point()

#AT8_columns <- merged_meta[, c("SampleName", "AT8sulcusLog", "DLFC.WS.AT8..cell.mm2")]
```
DESeq2 high/low group /w AT8_total, not stratified by year
```{r}
test_meta <- merged_meta[!is.na(merged_meta$PathAD), ]
#Removes rows with NA group
group_meta <- merged_meta[!is.na(merged_meta$Group_de), ]
#seperates group high and low
group_low_meta <- group_meta[!is.na(group_meta$Group_de) & group_meta$Group_de == "low", ]
group_high_meta <- group_meta[!is.na(group_meta$Group_de) & group_meta$Group_de == "high", ]
#removes rows with NA in AT8_total
group_low_meta <- group_low_meta[!is.na(group_low_meta$AT8_total), ]
group_high_meta <- group_high_meta[!is.na(group_high_meta$AT8_total), ]
#matches rows that remain with counts file so only relevant samples are present
group_counts_low <- rounded[, names(rounded) %in% group_low_meta$Core_ID]
group_counts_high <- rounded[, names(rounded) %in% group_high_meta$Core_ID]
#
design_form <- formula(paste("~ agedeath + RIN + Batch + AT8_total"))
dds_low <- DESeqDataSetFromMatrix(countData = group_counts_low,
                              colData = group_low_meta,
                              design = design_form)

dds_high <- DESeqDataSetFromMatrix(countData = group_counts_high,
                              colData = group_high_meta,
                              design = design_form)
dds_low <- DESeq(dds_low)
dds_high <- DESeq(dds_high)

saveRDS(dds_low, "/restricted/projectnb/cteseq/jrose/cte_deseq_output_group_AT8total_low.rds")
saveRDS(dds_high, "/restricted/projectnb/cteseq/jrose/cte_deseq_output_group_AT8total_high.rds")

```
DESeq2 high/low group, year 2018 and AT8_total
```{r}
#Removes rows with NA group
group_meta <- merged_meta[!is.na(merged_meta$Group_de), ]
#seperates by year
group_meta <- group_meta[group_meta$Year == 2018, ]
#seperates group high and low
group_low_meta <- group_meta[!is.na(group_meta$Group_de) & group_meta$Group_de == "low", ]
group_high_meta <- group_meta[!is.na(group_meta$Group_de) & group_meta$Group_de == "high", ]
#removes rows with NA in AT8_total
group_low_meta <- group_low_meta[!is.na(group_low_meta$AT8_total), ]
group_high_meta <- group_high_meta[!is.na(group_high_meta$AT8_total), ]
#matches rows that remain with counts file so only relevant samples are present
group_counts_low <- rounded[, names(rounded) %in% group_low_meta$Core_ID]
group_counts_high <- rounded[, names(rounded) %in% group_high_meta$Core_ID]
#
design_form <- formula(paste("~ agedeath + RIN + Batch + AT8_total"))
dds_low <- DESeqDataSetFromMatrix(countData = group_counts_low,
                              colData = group_low_meta,
                              design = design_form)

dds_high <- DESeqDataSetFromMatrix(countData = group_counts_high,
                              colData = group_high_meta,
                              design = design_form)
dds_low <- DESeq(dds_low)
dds_high <- DESeq(dds_high)

saveRDS(dds_low, "/restricted/projectnb/cteseq/jrose/cte_deseq_output_group_AT8total_2018_low.rds")
saveRDS(dds_high, "/restricted/projectnb/cteseq/jrose/cte_deseq_output_group_AT8total_2018_high.rds")
```
DESeq2 high/low group, year 2021 and AT8_total
```{r}
#Removes rows with NA group
group_meta <- merged_meta[!is.na(merged_meta$Group_de), ]
#seperates by year
group_meta <- group_meta[group_meta$Year == 2021, ]
#seperates group high and low
group_low_meta <- group_meta[!is.na(group_meta$Group_de) & group_meta$Group_de == "low", ]
group_high_meta <- group_meta[!is.na(group_meta$Group_de) & group_meta$Group_de == "high", ]
#removes rows with NA in AT8_total
group_low_meta <- group_low_meta[!is.na(group_low_meta$AT8_total), ]
group_high_meta <- group_high_meta[!is.na(group_high_meta$AT8_total), ]
#matches rows that remain with counts file so only relevant samples are present
group_counts_low <- rounded[, names(rounded) %in% group_low_meta$Core_ID]
group_counts_high <- rounded[, names(rounded) %in% group_high_meta$Core_ID]
#
design_form <- formula(paste("~ agedeath + RIN + Batch + AT8_total"))
dds_low <- DESeqDataSetFromMatrix(countData = group_counts_low,
                              colData = group_low_meta,
                              design = design_form)

dds_high <- DESeqDataSetFromMatrix(countData = group_counts_high,
                              colData = group_high_meta,
                              design = design_form)
dds_low <- DESeq(dds_low)
dds_high <- DESeq(dds_high)

saveRDS(dds_low, "/restricted/projectnb/cteseq/jrose/cte_deseq_output_group_AT8total_2021_low.rds")
saveRDS(dds_high, "/restricted/projectnb/cteseq/jrose/cte_deseq_output_group_AT8total_2021_high.rds")
```








